<?xml version="1.0" encoding="utf-8" ?>
<dataCommands xmlns="http://ns.renative.com/configuration/data"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xsi:schemaLocation="http://ns.renative.com/configuration/data
				commands.xsd">

  <!--获取虚拟分类和属性的对应关系-->
  <dataCommand name="GetAllFilter" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
      SELECT  A.TransactionNumber as [id],
			        A.CategoryID as [category_id],
               A.SortOrder as [order],
			        B.PropertyID as [filter_value],
			        B.[Description] AS [filter_name]
			 FROM Yintaicontent.dbo.OnlineCategoryAndFilterPropertyRelation A WITH(NOLOCK) 
		   INNER JOIN Yintaicontent.dbo.ItemProfileProperties B WITH(NOLOCK) 
		   ON A.PropertyID = B.PropertyID
      ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>

  <dataCommand name="GetAllSaleQuantity" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
     SELECT	 B.[ImageItemCode]
		        ,SUM(A.[Quantity])AS [Quantity] 
    FROM  YinTaiOrder.[dbo].[UV_SaleItems] A 
    INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo B WITH(NOLOCK)
          ON A.ItemCode=B.ItemCode 
          AND B.[ImageItemCode]<>''
    GROUP BY B.[ImageItemCode]
      ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>

  <!--获取所有的商品列表  排除以下（赠品）工业分类 584,585,586,587,588,591,592,593,594,731,834,903,292,604,1322
      去掉了 取 YinTaiContent.dbo.[ItemProfileCommonDescription]表的逻辑
      
      261,1502,1858,1980,2339,2358,2367,2398,2401,2429,2443,2474,2492,2532,2536,2579,3561,3562,3563,3564,3565,3566,3567,3622
      
  -->
  <dataCommand name="GetAllProudcts" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH T_ExcludeItemCategoryIds AS (
                                     SELECT 584 AS CategroyId UNION ALL
                                     SELECT 585 AS CategroyId UNION ALL
                                     SELECT 586 AS CategroyId UNION ALL
                                     SELECT 587 AS CategroyId UNION ALL
                                     SELECT 588 AS CategroyId UNION ALL
                                     SELECT 591 AS CategroyId UNION ALL
                                     SELECT 593 AS CategroyId UNION ALL
                                     SELECT 731 AS CategroyId UNION ALL
                                     SELECT 834 AS CategroyId UNION ALL
                                     SELECT 592 AS CategroyId UNION ALL
                                     SELECT 594 AS CategroyId UNION ALL
                                     SELECT 903 AS CategroyId UNION ALL
                                     SELECT 292 AS CategroyId UNION ALL
                                     SELECT 604 AS CategroyId UNION ALL
                                     SELECT 261 AS CategroyId UNION ALL
                                     SELECT 1322 AS CategroyId UNION ALL
                                     SELECT 1502 AS CategroyId UNION ALL
                                     SELECT 1858 AS CategroyId UNION ALL
                                     SELECT 1980 AS CategroyId UNION ALL
                                     SELECT 2339 AS CategroyId UNION ALL
                                     SELECT 2358 AS CategroyId UNION ALL
                                     SELECT 2367 AS CategroyId UNION ALL
                                     SELECT 2398 AS CategroyId UNION ALL
                                     SELECT 2401 AS CategroyId UNION ALL
                                     SELECT 2429 AS CategroyId UNION ALL
                                     SELECT 2443 AS CategroyId UNION ALL
                                     SELECT 2474 AS CategroyId UNION ALL
                                     SELECT 2492 AS CategroyId UNION ALL
                                     SELECT 2532 AS CategroyId UNION ALL
                                     SELECT 2536 AS CategroyId UNION ALL
                                     SELECT 2579 AS CategroyId UNION ALL
                                     SELECT 3561 AS CategroyId UNION ALL
                                     SELECT 3562 AS CategroyId UNION ALL
                                     SELECT 3563 AS CategroyId UNION ALL
                                     SELECT 3564 AS CategroyId UNION ALL
                                     SELECT 3565 AS CategroyId UNION ALL
                                     SELECT 3566 AS CategroyId UNION ALL
                                     SELECT 3567 AS CategroyId UNION ALL
                                     SELECT 3622 AS CategroyId UNION ALL
                                     SELECT 4914 AS CategroyId UNION ALL
                                     SELECT 6173 AS CategroyId UNION ALL
                                     SELECT 6468 AS CategroyId UNION ALL
                                     SELECT 6512 AS CategroyId UNION ALL
                                     SELECT 6868 AS CategroyId UNION ALL
                                     SELECT 6929 AS CategroyId UNION ALL
                                     SELECT 10842 AS CategroyId UNION ALL
                                     SELECT 10868 AS CategroyId UNION ALL
                                     SELECT 10888 AS CategroyId UNION ALL
                                     SELECT 10910 AS CategroyId UNION ALL
                                     SELECT 10926 AS CategroyId UNION ALL
                                     SELECT 10952 AS CategroyId UNION ALL
                                     SELECT 10960 AS CategroyId UNION ALL
                                     SELECT 10992 AS CategroyId UNION ALL
                                     SELECT 11026 AS CategroyId UNION ALL
                                     SELECT 11038 AS CategroyId UNION ALL
                                     SELECT 11080 AS CategroyId UNION ALL
                                     SELECT 11090 AS CategroyId UNION ALL
                                     SELECT 11132 AS CategroyId UNION ALL
                                     SELECT 11150 AS CategroyId UNION ALL
                                     SELECT 11158 AS CategroyId UNION ALL
                                     SELECT 11168 AS CategroyId UNION ALL
                                     SELECT 11174 AS CategroyId UNION ALL
                                     
                                     SELECT 7016 AS CategroyId UNION ALL 
                                     SELECT 7148 AS CategroyId UNION ALL 
                                     SELECT 9950 AS CategroyId UNION ALL 
                                     SELECT 7437 AS CategroyId UNION ALL 
                                     SELECT 7770 AS CategroyId UNION ALL 
                                     SELECT 8364 AS CategroyId UNION ALL 
                                     SELECT 11712 AS CategroyId UNION ALL 
                                     SELECT 11737 AS CategroyId UNION ALL 
                                     SELECT 11753 AS CategroyId UNION ALL 
                                     SELECT 11836 AS CategroyId UNION ALL 
                                     SELECT 11884 AS CategroyId UNION ALL 
                                     SELECT 9548 AS CategroyId UNION ALL 
                                     SELECT 8109 AS CategroyId UNION ALL 
                                     SELECT 8348 AS CategroyId UNION ALL 
                                     SELECT 9114 AS CategroyId UNION ALL 
                                     SELECT 9048 AS CategroyId UNION ALL 
                                     SELECT 8999 AS CategroyId UNION ALL 
                                     SELECT 12734 AS CategroyId UNION ALL 
                                     SELECT 12745 AS CategroyId UNION ALL 
                                     SELECT 12610 AS CategroyId UNION ALL 
                                     SELECT 12635 AS CategroyId UNION ALL 
                                     SELECT 12651 AS CategroyId UNION ALL 
                                     SELECT 8048 AS CategroyId UNION ALL 
                                     SELECT 6929 AS CategroyId UNION ALL 
                                     SELECT 6868 AS CategroyId UNION ALL 
                                     SELECT 9953 AS CategroyId UNION ALL 
                                     SELECT 6512 AS CategroyId UNION ALL 
                                     SELECT 12335 AS CategroyId UNION ALL 
                                     SELECT 12351 AS CategroyId UNION ALL 
                                     SELECT 12310 AS CategroyId UNION ALL 
                                     SELECT 12434 AS CategroyId UNION ALL 
                                     SELECT 12482 AS CategroyId UNION ALL 
                                     SELECT 6173 AS CategroyId UNION ALL 
                                     SELECT 5963 AS CategroyId UNION ALL 
                                     SELECT 4914 AS CategroyId UNION ALL 
                                     SELECT 9956 AS CategroyId UNION ALL 
                                     SELECT 4597 AS CategroyId UNION ALL 
                                     SELECT 12011 AS CategroyId UNION ALL 
                                     SELECT 12036 AS CategroyId UNION ALL 
                                     SELECT 12052 AS CategroyId UNION ALL 
                                     SELECT 12135 AS CategroyId UNION ALL 
                                     SELECT 12183 AS CategroyId UNION ALL 
                                     SELECT 5531 AS CategroyId UNION ALL 
                                     SELECT 5236 AS CategroyId UNION ALL 
                                     SELECT 4553 AS CategroyId
                                 )
,Products AS(
                SELECT A.[GroupNo]
                      ,A.[ItemCode]
                      ,A.[ImageItemCode]
                      ,A.[Name]
                      ,CONVERT(varchar(30) ,A.[PublishDate] ,126) AS PublishDate
                      ,CONVERT(varchar(30) ,A.[InPublishDate] ,126) AS FirstPublishDate  
                      ,A.[CategoryID]
                      ,A.[ImageNameFull] AS [Resourcename]
                      ,A.PublishStatus
                      ,A.ProductCategoryType
                      ,A.ShortName
                      ,B.[Price]
                      ,B.[PriceFinal]
                      ,B.[ItemType] 
                      ,B.[PromotionStartTime]
                      ,B.[PromotionEndTime]
                      ,C.[Description] AS [Categorydescription]
                      ,D.[BrandID]
                      ,ROW_NUMBER() OVER(
                           PARTITION BY ImageItemCode ORDER BY E.AvailableQuantity 
                           DESC
                          ,B.[Pricefinal] 
                           DESC
                          ,A.[PublishDate] DESC
                       ) AS 'RowNumber'
                FROM   YinTaiContent.dbo.[ItemProfileCommonInfo] AS A WITH(NOLOCK)
                       INNER JOIN YinTaiContent.dbo.[ItemProfilePriceSetting] AS 
                            B WITH(NOLOCK)
                            ON  A.ItemCode = B.ItemCode
                       INNER JOIN YintaiContent.dbo.[ItemCategory] AS C WITH(NOLOCK)
                            ON  A.[CategoryID] = C.[CategoryID]
                       INNER JOIN YinTaiContent.dbo.[BrandInfo] AS D WITH(NOLOCK)
                            ON  A.[BrandID] = D.[BrandID]
                       LEFT JOIN (
                                SELECT ItemCode
                                      ,AvailableQuantity = 1
                                FROM   YinTaiInventory.dbo.InventoryMaster WITH(NOLOCK)
                                WHERE  AvailableQuantity > 0
                                GROUP BY
                                       ItemCode
                            ) AS E
                            ON  A.ItemCode = E.ItemCode
                WHERE  A.[PublishStatus] = 1
                       AND A.[CategoryID] > 0
                       AND A.[ImageItemCode] <> ''
                       AND A.[ItemCode] <> ''
                       AND C.[CategoryID] NOT IN (SELECT CategroyId
                                                  FROM   
                                                         T_ExcludeItemCategoryIds)
            ),
Products2 AS (
                 SELECT A.[GroupNo]
                       ,A.[ItemCode]
                       ,A.[ImageItemCode]
                       ,A.[Name]
                       ,CONVERT(varchar(30) ,A.[PublishDate] ,126) AS PublishDate
                       ,CONVERT(varchar(30) ,A.[InPublishDate] ,126) AS FirstPublishDate 
                       ,A.[CategoryID]
                       ,A.[ImageNameFull] AS [Resourcename]
                       ,A.PublishStatus
                       ,A.ProductCategoryType
                       ,A.ShortName
                       ,B.[Price]
                       ,B.[PriceFinal]
                       ,B.[ItemType] 
                       ,B.[PromotionStartTime]
                       ,B.[PromotionEndTime]
                       ,C.[Description] AS [Categorydescription]
                       ,D.[BrandID]
                       ,ROW_NUMBER() OVER(
                            PARTITION BY ImageItemCode ORDER BY B.[Pricefinal] 
                            DESC
                           ,A.[PublishDate] DESC
                        ) AS 'RowNumber'
                 FROM   YinTaiContent.dbo.[ItemProfileCommonInfo] AS A WITH(NOLOCK)
                        INNER JOIN YinTaiContent.dbo.[ItemProfilePriceSetting] AS 
                             B 
                             WITH(NOLOCK)
                             ON  A.ItemCode = B.ItemCode
                        INNER JOIN YintaiContent.dbo.[ItemCategory] AS C WITH(NOLOCK)
                             ON  A.[CategoryID] = C.[CategoryID]
                        INNER JOIN YinTaiContent.dbo.[BrandInfo] AS D WITH(NOLOCK)
                             ON  A.[BrandID] = D.[BrandID]
                        INNER JOIN (
                                 SELECT E1.ItemCode
                                 FROM   YinTaiContent.dbo.BargainProduct AS E1 
                                        WITH (NOLOCK)
                                        INNER JOIN YinTaiContent.dbo.Bargain AS 
                                             E2 WITH(NOLOCK)
                                             ON  E2.BargainID = E1.BargainID
                                 WHERE  (E2.BargainStatus = 20 OR E2.BargainStatus = 15)
                                        AND E2.EndTime > GETDATE()
                                        AND E1.[Status] = 10
                             ) AS E
                             ON  A.ItemCode = E.ItemCode
                 WHERE  A.PublishStatus = 0
                        AND A.[CategoryID] > 0
                        AND A.[ImageItemCode] <> ''
                        AND A.[ItemCode] <> ''
                        AND C.[CategoryID] NOT IN (SELECT CategroyId
                                                   FROM   
                                                          T_ExcludeItemCategoryIds)
             )

SELECT *,IsCJian=1
FROM   Products2
WHERE  [RowNumber] = 1 
UNION ALL
SELECT *
,(
SELECT COUNT(ItemCode) from YinTaiContent.dbo.[ItemProfileCommonInfo] AS I WITH(NOLOCK) where I.ImageItemCode=P.ImageItemCode AND ( I.ProductCategoryType=4 OR I.ProductType=3 )
) as IsCJian
FROM   Products AS P
WHERE  [RowNumber] = 1;
    ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>

  <!--获取所有的分类
    2011-7-29 因为要处理特卖下架产品的属性处理
     特卖商品状态
   10 20 30 0
 0 逻辑删除
 10 （上架 特卖的上架，该商品是要咱家特卖的）
 20 （特卖的下架，商品被冻结）
 30（特卖的下架，当活动被冻结）
 
 特卖活动
 15 是活动发布
 20 活动进行
 40 活动结束
  -->
  <dataCommand name="GetAllPropertiesByImageItemCode" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
                  ;WITH ItemCodes AS
(
    SELECT ItemCode,D.ImageItemCode,D.CategoryID
    FROM YinTaiContent.dbo.ItemProfileCommonInfo AS D WITH(NOLOCK)
    WHERE ISNULL(D.ImageItemCode,'') != '' AND D.PublishStatus = 1
    UNION ALL
    SELECT ItemCode,i.ImageItemCode,i.CategoryID
    FROM YinTaiContent.dbo.ItemProfileCommonInfo AS i WITH(NOLOCK)
    WHERE i.PublishStatus = 0 
        AND ISNULL(i.ImageItemCode,'') != ''
       AND EXISTS(
           SELECT 1 FROM YinTaiContent.dbo.BargainProduct b WITH(NOLOCK)
           WHERE b.ItemCode = i.ItemCode AND b.Status = 10 
           AND EXISTS (
              SELECT 1 FROM YinTaiContent.dbo.Bargain AS E1 WITH (NOLOCK)
              WHERE E1.BargainID = b.BargainID
              AND E1.EndTime > GETDATE()
              AND E1.BargainStatus IN (20,15)
           )
       )
), IProperties AS (
    SELECT  i.ImageItemCode,
           i.CategoryID,
           r.ItemCode,
           r.PropertyID,
           r.ValueID
    FROM YinTaiContent.dbo.ItemProfilePropertyValueRelations r WITH(NOLOCK)
    INNER JOIN ItemCodes i ON i.ItemCode = r.ItemCode 
    WHERE r.[Status] != 0 AND i.ImageItemCode != ''
),
SCodes AS
(
       SELECT 
       u.ImageItemCode,
       u.PropertyID,
       u.ValueID,
       u.CategoryID,
       idx = ROW_NUMBER()OVER(PARTITION BY ImageItemCode,PropertyID,ValueID ORDER BY u.ImageItemCode) 
       FROM IProperties u 
)

SELECT 
     c.PropertyID AS [property_name_id]
    ,c.[ValueID] AS [property_value_id]
    ,[property_name] = p.[Description]
    ,[property_value_name] = v.[Description]
    ,[order] = v.SortOrder
    ,c.ImageItemCode
FROM SCodes c
    INNER JOIN YinTaiContent.dbo.ItemProfileProperties AS p WITH(NOLOCK) ON p.PropertyID = c.PropertyID AND p.IsSearch = 0 AND p.[Status] != 0
    INNER JOIN YinTaiContent.dbo.ItemProfilePropertyValues AS v WITH(NOLOCK) ON v.ValueID = c.ValueID AND v.IsSearch = 0 AND v.PropertyID = c.PropertyID
WHERE 
 c.idx=1
 AND 
    EXISTS (SELECT 1 FROM YinTaiContent.dbo.ItemCategoryAndPropertyRelation r WITH(NOLOCK) WHERE r.CategoryID = c.CategoryID AND r.PropertyID = c.PropertyID AND r.Status != 0)
    ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>

  <!--获取虚拟分类和工业分类的关系-->
  <dataCommand name="GetAllOnlineAndItemCategoryRelation" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
      SELECT  [OnlineCategoryID]
             ,[ItemCategoryID]
      FROM [YinTaiContent].[dbo].[OnlineAndItemCategoryRelation] WITH(NOLOCK)
    ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>

  <!--获取特卖列表
  特卖商品状态
   10 20 30 0
 0 逻辑删除
 10 （上架 特卖的上架，该商品是要咱家特卖的）
 20 （特卖的下架，商品被冻结）
 30（特卖的下架，当活动被冻结）
 
 特卖活动
 15 是活动发布
 20 活动进行
 40 活动结束
  
  -->
  <dataCommand name="GetAllBargains" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
-- Author: 梁宏朋
-- Create date: 2012/3/1 10:45:06
-- Description: 
-- =============================================
WITH DATA AS (
                 SELECT a.BargainID
                        --,b.BeginTime
                        --,b.EndTime
                       ,MAX(a.IsTop) AS [Order]
                       ,c.ImageItemCode
                       ,MAX(a.BargainPrice) AS MaxBargainPrice
                       ,MIN(a.BargainPrice) AS MinBargainPrice
                       ,MAX(d.Price) AS MaxPrice
                       ,MIN(d.Price) AS MinPrice
					             ,MAX(1 - ((d.Price - a.BargainPrice) / (d.Price)))*10 as MaxDiscount
					             ,MIN(1 - ((d.Price - a.BargainPrice) / (d.Price)))*10 as MinDiscount
                       ,MAX(CAST(ISNULL(a.IsRecommend,0) AS int)) AS IsRecommend
                 FROM   YinTaiContent.dbo.BargainProduct a WITH (NOLOCK)
                        INNER JOIN YinTaiContent.dbo.Bargain b WITH (NOLOCK)
                             ON  a.BargainID = b.BargainID
                        INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo c 
                             WITH (NOLOCK)
                             ON  a.ItemCode = c.ItemCode
                                 AND c.ImageItemCode <> ''
                        INNER JOIN YinTaiContent.dbo.ItemProfilePriceSetting d 
                             WITH (NOLOCK)
                             ON  a.ItemCode = d.ItemCode
                             AND d.Price>0
                 WHERE  (b.BargainStatus = 20 OR b.BargainStatus = 15)
                        AND b.EndTime > GETDATE()
                        AND a.[Status] = 10
                 GROUP BY
                        a.BargainID
                        --,b.BeginTime
                        --,b.EndTime
                       ,c.ImageItemCode
             )

SELECT DATA.*
      ,b.BeginTime
      ,b.EndTime
      ,b.BargainStatus
FROM   DATA
       INNER JOIN YinTaiContent.dbo.Bargain b WITH (NOLOCK)
            ON  DATA.BargainID = b.BargainID;
    ]]>
    </commandText>
  </dataCommand>

  <!--获取虚拟分类和工业分类的关系不包含顶级节点不可用的分类-->
  <dataCommand name="GetAllCategoryWithAvailable" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
      WITH Data AS
	    (
		    SELECT 
			    CategoryID,
			    CAST(CategoryID AS VARCHAR) AS CategoryIDS,
			    CAST([Description] AS VARCHAR ) AS [Path],
			    [Description] AS CategoryName,
			    ParentID,
			    0 as Depth,
			    SortOrder
		    FROM YinTaiContent.dbo.OnlineCategory g WITH(NOLOCK) 
		    WHERE [Status] = 1 AND ParentId = 0
        
		    UNION ALL
        
		    SELECT 
			  s.CategoryID,
		    CAST(Data.CategoryIDS+'->'+CAST(s.CategoryID AS VARCHAR) AS VARCHAR) AS CategoryIDS,
		    CAST(Data.Path+'->'+s.Description AS VARCHAR) AS [Path],
			    [Description] AS CategoryName,
			    s.ParentID,
			    Data.Depth+1 as Depth,
			    s.SortOrder			
		    FROM YinTaiContent.dbo.OnlineCategory s WITH(NOLOCK) INNER JOIN data ON s.ParentID = data.CategoryID  WHERE [Status] = 1
	    ) SELECT * FROM Data
  
    ]]>
    </commandText>
  </dataCommand>

  <!--获取虚拟分类和工业分类的关系-->
  <dataCommand name="GetAllCategory" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
    WITH   Data
          AS ( SELECT   CategoryID ,
                        CAST(CategoryID AS VARCHAR) AS CategoryIDS ,
                        CAST([Description] AS VARCHAR) AS [Path] ,
                        [Description] AS CategoryName ,
                        [ParentID] ,
                        0 AS Depth ,
                        SortOrder
               FROM     YinTaiContent.dbo.OnlineCategory g WITH ( NOLOCK )
               WHERE    ParentId = 0
               UNION ALL
               SELECT   s.CategoryID ,
                        CAST(Data.CategoryIDS + '->'
                        + CAST(s.CategoryID AS VARCHAR) AS VARCHAR) AS CategoryIDS ,
                        CAST(Data.Path + '->' + s.Description AS VARCHAR) AS [Path] ,
                        [Description] AS CategoryName ,
                        s.[ParentID] ,
                        Data.Depth + 1 AS Depth ,
                        s.SortOrder
               FROM     YinTaiContent.dbo.OnlineCategory s WITH ( NOLOCK )
                        INNER JOIN data ON s.ParentID = data.CategoryID
             )
    SELECT  *
    FROM    Data
  
    ]]>
    </commandText>
  </dataCommand>

  <!--获取所有扩展属性关系列表-->
  <dataCommand name="GetAllExtensionPropertyRelation" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
        SELECT [Alias]
              ,[PropertyID]
              ,[PropertyName]
              ,[PropertyValueID]
              ,[PropertyValueName]
              ,[Description]
        FROM [YinTaiContent].[dbo].[ExtensionPropertyRelation] WITH(NOLOCK)
    ]]>
    </commandText>
  </dataCommand>



  <!--获取商品标识信息-->
  <dataCommand name="GetAllImageItemMall" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
       SELECT i.ImageItemCode 
      ,t.[Mall] 
      FROM [YinTaiContent].[dbo].[TB_MallMerchandisingItems] t WITH(NOLOCK) 
      INNER JOIN YintaiContent.dbo.ItemProfileCommonInfo i WITH(NOLOCK) ON t.ItemCode = i.ItemCode 
      GROUP BY i.ImageItemCode,t.Mall
    ]]>
    </commandText>
  </dataCommand>

  <!--获取商品模特图 ====》ItemCode = ImageItemCode 《====注意  为了兼容老数据，在排序字段中加入 TransactionNumber
    2012-4-25修改模特图规则
    模特图标识问题：
   1. 数据库表名：[YinTaiContent].[dbo].[ItemProfileResources]
   2．表中标识字段：[ReservationInt1] 该字段值为2时代表模特图，为1时为细节实物图.

  模特图取第一张图 根据SortOrder最小的那张

  -->
  <dataCommand name="GetAllImageItemModelImage" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH t1 AS (
               SELECT [ItemCode] AS [ImageItemCode]
                     ,[Name] AS [ModelImageName]
                     ,ROW_NUMBER() OVER(
                          PARTITION BY [ItemCode] ORDER BY SortOrder ASC 
                         ,TransactionNumber ASC 
                      ) AS RowNumber
               FROM   [YinTaiContent].dbo.ItemProfileResources WITH(NOLOCK)
               WHERE  [ReservationInt1] = 2
                      AND [ItemCode] <> ''
                      AND [Name] <> ''
           )

SELECT [ImageItemCode]
      ,[ModelImageName]
FROM   t1
WHERE  RowNumber = 1;
    ]]>
    </commandText>
  </dataCommand>

  <!--获取商品排序-->
  <dataCommand name="GetAllImageItemSortOrder" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT ImageItemCode
      ,MAX(SortOrder) AS SortOrder
FROM   [YinTaiContent2].[dbo].[TB_ItemProfileDisplayDetails] WITH(NOLOCK)
WHERE  [ImageItemCode] <> ''
GROUP BY
       ImageItemCode;
    ]]>
    </commandText>
  </dataCommand>

  <!--增加推广活动-->
  <dataCommand name="GetAllImageItemPromotion" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH
ID AS(
         SELECT b.ImageItemCode
               ,ItemCode = MIN(A.ItemCode)
         FROM   YintaiContent2.dbo.TB_ItemProfileDisplayDetails AS a WITH (NOLOCK)
                INNER JOIN Yintaicontent.dbo.ItemProfileCommonInfo AS b WITH (NOLOCK)
                     ON  a.ItemCode = b.ItemCode
         WHERE  b.ImageItemCode <> ''
                AND (
                        a.Manjian IS NOT NULL
                        OR a.Manfan IS NOT NULL
                        OR a.ManEFanQuan IS NOT NULL
                        OR a.DetailSpecification <> ''
                    )
         GROUP BY
                B.ImageItemCode
               ,CHECKSUM(CAST(a.Manjian AS nvarchar(MAX)))
               ,LEN(CAST(a.Manjian AS nvarchar(MAX)))
               ,CHECKSUM(CAST(a.Manfan AS nvarchar(MAX)))
               ,LEN(CAST(a.Manfan AS nvarchar(MAX)))
               ,CHECKSUM(CAST(a.ManEFanQuan AS nvarchar(MAX)))
               ,LEN(CAST(a.ManEFanQuan AS nvarchar(MAX)))
               ,CHECKSUM(CAST(a.Manzeng AS nvarchar(MAX)))
               ,LEN(CAST(a.Manzeng AS nvarchar(MAX)))
               ,CHECKSUM(a.DetailSpecification)
               ,LEN(a.DetailSpecification)
     )
SELECT ID.ImageItemCode
      ,CAST(a.Manjian AS nvarchar(MAX)) AS ManjianStructure
      ,CAST(a.Manfan AS nvarchar(MAX)) AS ManfanStructure
      ,CAST(a.ManEFanQuan AS nvarchar(MAX)) AS ManEFanQuanStructure
      ,CAST(a.Manzeng AS nvarchar(MAX)) AS ManZengStructure
      ,a.DetailSpecification AS DetailSpecification
FROM   ID
       INNER JOIN YintaiContent2.dbo.TB_ItemProfileDisplayDetails AS a WITH (NOLOCK)
            ON  a.ItemCode = ID.ItemCode;
    ]]>
    </commandText>
  </dataCommand>

  <!--获取分类与销售属性的关系 因老数据尺寸ID=69 新数据尺寸ID=699 所以应排除属性ID=69的-->
  <dataCommand name="GetSalePropertyAndCategroyRelation" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH t1 AS (
               SELECT DISTINCT 
                      a.CategoryID AS ItemCategoryID
                     ,a.PropertyID
                     ,b.[Description] AS PropertyName
               FROM   [YinTaiContent].dbo.ItemCategoryAndPropertyRelation a WITH (NOLOCK)
                      INNER JOIN  [YinTaiContent].dbo.ItemProfileProperties b WITH (NOLOCK)
                           ON  a.PropertyID = b.PropertyID
               WHERE  a.IsGroupProperty = 1 AND a.PropertyID <> 69

           )
SELECT DISTINCT
       c.CategoryID
      ,c.[Description] AS CategoryName
      ,a.PropertyID
      ,a.PropertyName
FROM   t1 AS a
       INNER JOIN [YinTaiContent].dbo.OnlineAndItemCategoryRelation b WITH(NOLOCK)
            ON  a.ItemCategoryID = b.ItemCategoryID
       INNER JOIN  [YinTaiContent].dbo.OnlineCategory c WITH(NOLOCK)
            ON  b.OnlineCategoryID = c.CategoryID;
            
    ]]>
    </commandText>
  </dataCommand>

  <!--销售量 自定义需求-->
  <dataCommand name="GetAllImageItemCustomSaleQuantity" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
DECLARE @beginDate datetime
       ,@endDate datetime
       ,@date datetime;
SET @date = GETDATE();
SET @endDate = CAST(YEAR(@date) AS varchar) + '-' + CAST(MONTH(@date) AS varchar)+ '-' + CAST(day(@date) AS varchar);
SET @beginDate = DATEADD(day ,-10 ,@endDate);

WITH t1 AS (
               SELECT A.ItemCode
                     ,SUM(A.Quantity) AS Quantity
               FROM   [YinTaiOrder].[dbo].[SOTransaction] A WITH(NOLOCK)
                      INNER JOIN [YinTaiOrder].[dbo].[SOMaster] B WITH(NOLOCK)
                           ON  A.[SONumber] = B.[SONumber]
               WHERE  B.[Status] <> 9999
                      AND B.SODate >= @beginDate
                      AND B.SODate < @endDate
               GROUP BY
                      A.ItemCode
           )

SELECT B.[ImageItemCode]
      ,SUM(A.[Quantity]) AS [Quantity]
FROM   t1 A
       INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo B WITH(NOLOCK)
            ON  A.ItemCode = B.ItemCode
                AND B.[ImageItemCode] <> ''
GROUP BY
       B.[ImageItemCode];
    ]]>
    </commandText>
  </dataCommand>

  <!--提取预售属性，-->
  <dataCommand name="GetAllImageItemSellType" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT [ImageItemCode]
FROM   [YinTaiContent].[dbo].[ItemProfileCommonInfo] WITH(NOLOCK)
WHERE  [ImageItemCode] <> ''
       AND [IfPresell] = 1
       AND [PublishStatus] = 1
GROUP BY
       [ImageItemCode];
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 资源名称，-->
  <dataCommand name="GetAllImageItemResourcename" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT DISTINCT
       a.GroupNo
      ,a.ImageItemCode
      ,b.[Name] AS Resourcename
FROM   YinTaiContent.dbo.ItemProfileCommonInfo a WITH(NOLOCK)
       INNER JOIN YinTaiContent.dbo.ItemProfileResources b WITH(NOLOCK)
            ON  a.ImageItemCode = b.ItemCode
       INNER JOIN (
                SELECT E1.ItemCode
                FROM   YinTaiContent.dbo.BargainProduct AS E1 WITH (NOLOCK)
                       INNER JOIN YinTaiContent.dbo.Bargain AS E2 WITH(NOLOCK)
                            ON  E2.BargainID = E1.BargainID
                WHERE  (E2.BargainStatus = 20 OR E2.BargainStatus = 15)
                       AND E2.EndTime > GETDATE()
                       AND E1.[Status] = 10
            ) c
            ON  a.ItemCode = c.ItemCode
WHERE  a.ImageItemCode <> ''
       AND a.GroupNo <> ''
       AND b.IsDefault = 1
ORDER BY
       a.GroupNo
      ,a.ImageItemCode;
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 尺码健康度-->
  <dataCommand name="GetAllImageItemHealthDegree" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT [ImageItemCode]
      ,[HealthyDegree]
  FROM [YinTaiContent].[dbo].[ItemSizeHealthDegree] with(nolock)
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 渠道价格 提前结束0分钟 -->
  <dataCommand name="GetAllImageItemChannelPrice" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
--ERPSCM.[dbo].[UP_GetGoodsChannelDifferPrice]
--DECLARE @Date datetime;
--SET @Date = DATEADD(mi ,1 ,GETDATE());
 WITH T_ItemPrice AS (
                         SELECT a.prodid AS ItemCode
                               ,a.Channelid AS ChannelId
                               ,ISNULL(b.DisplayName ,b.Channel) AS ChannelName
                               ,ISNULL(a.PromotionPrice ,a.Price) AS  ChannelPrice --渠道价
                               ,a.StartTime
                               ,a.EndTime
                               ,a.BonusUnit AS JiFen 
                               ,a.IfPromotion
                               ,a.Price
                         FROM   ERPSCM.dbo.ProductPrice a WITH(NOLOCK)
                                INNER JOIN ERPBASE.dbo.Channel b WITH(NOLOCK)
                                     ON  a.Channelid = b.Channelid
                         WHERE (a.ItemType = 50 AND a.IfPromotion = 1 AND a.IfSell = 1) --暂定为50 标识渠道异价活动
                               OR (a.Channelid = 1100102 AND a.IfSell = 1)   
                     ),
                           T_ImageItemPrice  AS (
                                                    SELECT a.*
                                                          ,b.ImageItemCode
                                                          ,ROW_NUMBER() OVER(
                                                               PARTITION BY 
                                                               b.ImageItemCode
                                                              ,a.Channelid
                                                               ORDER BY 
                                                               a.ChannelPrice
                                                               DESC
                                                              ,a.StartTime DESC
                                                              ,a.EndTime ASC
                                                           ) AS 'RowNumber'
                                                    FROM   T_ItemPrice AS a
                                                           INNER JOIN 
                                                                YinTaiContent.dbo.ItemProfileCommonInfo AS 
                                                                b WITH(NOLOCK)
                                                                ON  a.ItemCode = 
                                                                    b.ItemCode
                                                    WHERE  b.ImageItemCode <> ''
                                                )
SELECT a.ItemCode
      ,a.ImageItemCode
      ,a.ChannelId
      ,a.ChannelName
      ,a.ChannelPrice
      ,a.StartTime
      ,a.EndTime
      ,a.JiFen 
      ,a.IfPromotion
      ,a.Price
FROM   T_ImageItemPrice AS a
WHERE  RowNumber = 1
ORDER BY
       ImageItemCode
      ,Channelid;
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 上市时间 指定属性，返回ITEM-->
  <dataCommand name="GetAllImageItemTimeToMarket" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT
      d.ImageItemCode
      ,MAX(c.[Description]) AS PropertyValueName
FROM   YinTaiContent.dbo.ItemProfilePropertyValueRelations AS a WITH (NOLOCK)
       INNER JOIN YinTaiContent.dbo.ItemProfilePropertyValues AS c WITH (NOLOCK)
            ON  a.ValueID = c.ValueID
       INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo AS d WITH (NOLOCK)
            ON  a.ItemCode = d.ItemCode
WHERE  d.ImageItemCode <> '' AND a.PropertyID = 1573
GROUP BY
       d.ImageItemCode
ORDER BY d.ImageItemCode;
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 销售排序值 -->
  <dataCommand name="GetAllImageItemSortQuantity" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  

DECLARE @beginDate datetime
       ,@endDate datetime
       ,@date datetime;
SET @date = GETDATE();
SET @endDate = CAST(YEAR(@date) AS varchar) + '-' + CAST(MONTH(@date) AS varchar)
    + '-' + CAST(DAY(@date) AS varchar);
SET @beginDate = DATEADD(DAY ,-7 ,@endDate);

WITH T_ItemQuantity AS (
                           SELECT a.ItemCode
                                 ,ISNULL(SUM(a.Quantity),0) AS Quantity
                           FROM   YinTaiOrder.dbo.SOTransaction a WITH(NOLOCK)
                                  INNER JOIN YinTaiOrder.dbo.SOMaster b WITH(NOLOCK)
                                       ON  a.SONumber = b.SONumber
                           WHERE  b.[Status] not in (-100,-10)
                                  AND a.ItemType <> 65
                                  AND a.ItemCode <> 'COM'
                                  AND b.PaymentMethodCode != '999'
                                  AND b.SODate BETWEEN @beginDate AND @endDate
                           GROUP BY
                                  a.ItemCode
                       )


SELECT a.ImageItemCode
      ,SUM(b.Quantity) AS Quantity
FROM   YinTaiContent.dbo.ItemProfileCommonInfo AS a WITH (NOLOCK)
       INNER JOIN T_ItemQuantity AS b
            ON  a.ItemCode = b.ItemCode
WHERE 
  a.ImageItemCode <> ''
GROUP BY
       a.ImageItemCode;
    ]]>
    </commandText>
  </dataCommand>

  <!--提取 类型SortOrder -->
  <dataCommand name="GetAllImageItemTypeSortOrder" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
DECLARE @date datetime;
SET @date = GETDATE();

SELECT a.ImageItemCode
      ,a.[Type]
      ,MAX(a.SortOrder) AS SortOrder
      ,MAX(a.Pkid1) AS Pkid1
FROM   YinTaiContent.dbo.ItemProfileSortOrder AS a WITH(NOLOCK)
WHERE  a.StartTime <= @date
       AND a.EndTime > @date
GROUP BY
       a.ImageItemCode
      ,a.[Type]; 
    ]]>
    </commandText>
  </dataCommand>

</dataCommands>
