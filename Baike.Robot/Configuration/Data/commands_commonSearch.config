<?xml version="1.0" encoding="utf-8" ?>
<dataCommands xmlns="http://ns.renative.com/configuration/data"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xsi:schemaLocation="http://ns.renative.com/configuration/data
				commands.xsd">

  <!--获取虚拟分类和属性的对应关系-->
  <dataCommand name="GetListFilter" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
      SELECT  A.TransactionNumber as [id],
			        A.CategoryID as [category_id],
               A.SortOrder as [order],
			        B.PropertyID as [filter_value],
			        B.[Description] AS [filter_name]
			 FROM Yintaicontent.dbo.OnlineCategoryAndFilterPropertyRelation A WITH(NOLOCK) 
		   INNER JOIN Yintaicontent.dbo.ItemProfileProperties B WITH(NOLOCK) 
		   ON A.PropertyID = B.PropertyID
      ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <!--获取分类与销售属性的关系 因老数据尺寸ID=69 新数据尺寸ID=699 所以应排除属性ID=69的-->
  <dataCommand name="GetListSalePropertyAndCategroyRelation" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH t1 AS (
               SELECT DISTINCT 
                      a.CategoryID AS ItemCategoryID
                     ,a.PropertyID
                     ,b.[Description] AS PropertyName
               FROM   dbo.ItemCategoryAndPropertyRelation a WITH (NOLOCK)
                      INNER JOIN dbo.ItemProfileProperties b WITH (NOLOCK)
                           ON  a.PropertyID = b.PropertyID
               WHERE  a.IsGroupProperty = 1 AND a.PropertyID <> 69

           )
SELECT DISTINCT
       c.CategoryID
      ,c.[Description] AS CategoryName
      ,a.PropertyID
      ,a.PropertyName
FROM   t1 AS a
       INNER JOIN dbo.OnlineAndItemCategoryRelation b WITH(NOLOCK)
            ON  a.ItemCategoryID = b.ItemCategoryID
       INNER JOIN dbo.OnlineCategory c WITH(NOLOCK)
            ON  b.OnlineCategoryID = c.CategoryID;
            
    ]]>
    </commandText>
  </dataCommand>

  <!--获取虚拟分类和工业分类的关系不包含顶级节点不可用的分类-->
  <dataCommand name="GetListCategoryWithAvailable" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
      WITH Data AS
	    (
		    SELECT 
			    CategoryID,
			    CAST(CategoryID AS VARCHAR) AS CategoryIDS,
			    CAST([Description] AS VARCHAR ) AS [Path],
			    [Description] AS CategoryName,
			    ParentID,
			    0 as Depth,
			    SortOrder
		    FROM YinTaiContent.dbo.OnlineCategory g WITH(NOLOCK) 
		    WHERE [Status] = 1 AND ParentId = 0
        
		    UNION ALL
        
		    SELECT 
			  s.CategoryID,
		    CAST(Data.CategoryIDS+'->'+CAST(s.CategoryID AS VARCHAR) AS VARCHAR) AS CategoryIDS,
		    CAST(Data.Path+'->'+s.Description AS VARCHAR) AS [Path],
			    [Description] AS CategoryName,
			    s.ParentID,
			    Data.Depth+1 as Depth,
			    s.SortOrder			
		    FROM YinTaiContent.dbo.OnlineCategory s WITH(NOLOCK) INNER JOIN data ON s.ParentID = data.CategoryID  WHERE [Status] = 1
	    ) SELECT * FROM Data
  
    ]]>
    </commandText>
  </dataCommand>

  <!--获取虚拟分类和工业分类的关系-->
  <dataCommand name="GetListCategory" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
    WITH   Data
          AS ( SELECT   CategoryID ,
                        CAST(CategoryID AS VARCHAR) AS CategoryIDS ,
                        CAST([Description] AS VARCHAR) AS [Path] ,
                        [Description] AS CategoryName ,
                        [ParentID] ,
                        0 AS Depth ,
                        SortOrder
               FROM     YinTaiContent.dbo.OnlineCategory g WITH ( NOLOCK )
               WHERE    ParentId = 0
               UNION ALL
               SELECT   s.CategoryID ,
                        CAST(Data.CategoryIDS + '->'
                        + CAST(s.CategoryID AS VARCHAR) AS VARCHAR) AS CategoryIDS ,
                        CAST(Data.Path + '->' + s.Description AS VARCHAR) AS [Path] ,
                        [Description] AS CategoryName ,
                        s.[ParentID] ,
                        Data.Depth + 1 AS Depth ,
                        s.SortOrder
               FROM     YinTaiContent.dbo.OnlineCategory s WITH ( NOLOCK )
                        INNER JOIN data ON s.ParentID = data.CategoryID
             )
    SELECT  *
    FROM    Data
  
    ]]>
    </commandText>
  </dataCommand>

  <!--获取款式和花色的关系-->
  <dataCommand name="GetListForStyleAndColorProductRelation" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT a.GroupNo
      ,a.ImageItemCode
FROM   YinTaiContent.dbo.ItemProfileCommonInfo AS a WITH (NOLOCK)
WHERE  a.GroupNo <> ''
       AND a.ImageItemCode <> ''
       AND a.PublishStatus = 1
GROUP BY
       a.GroupNo
      ,a.ImageItemCode
ORDER BY a.GroupNo;
    ]]>
    </commandText>
  </dataCommand>

  <!--获取有花色的品牌信息-->
  <dataCommand name="GetListForBrand" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
SELECT a.BrandID AS BrandId
      ,a.[Name] AS BrandName
      ,a.BriefName AS BrandEnglishName
      ,a.Website AS BrandWebsite
      ,a.PriorityShow AS BrandPriorityShow
      ,0 AS BrandSortOrder
FROM   YinTaiContent.dbo.BrandInfo AS a WITH (NOLOCK)
       --LEFT JOIN (
       --         SELECT BrandID
       --               ,MAX(b.SortOrder) AS BrandSortOrder
       --         FROM   YinTaiContent.dbo.BrandCommend AS b WITH (NOLOCK)
       --         GROUP BY
       --                b.BrandId
       --     ) AS c
       --     ON  a.BrandID = c.BrandId;
      ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>


  <!--获取所有的库存信息
      增加对特卖商品下架类产品库存的提取，如果有重复的取汇总值
  -->
  <dataCommand name="GetAllImageItemCodeStock" database="EC" commandType="Text">
    <commandText>
      <![CDATA[  
WITH p0 AS (
               SELECT CAST(SUM(AvailableQuantity) AS int) AS [Count]
                     ,ImageItemCode
               FROM   YinTaiInventory.dbo.InventoryMaster A WITH(NOLOCK)
                      INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo B WITH(NOLOCK)
                           ON  A.ItemCode = B.ItemCode
                               AND B.PublishStatus = 0
                               AND B.[ImageItemCode] <> ''
                               AND B.[ItemCode] <> ''
                      INNER JOIN YinTaiContent.dbo.BargainProduct C WITH(NOLOCK)
                           ON  A.ItemCode = C.ItemCode
                               AND C.[Status] = 10
                      INNER JOIN YinTaiContent.dbo.Bargain D WITH(NOLOCK)
                           ON  C.BargainID = D.BargainID
                               AND D.EndTime > GETDATE()
                               AND (D.BargainStatus = 20 OR D.BargainStatus = 15)
               GROUP BY
                      B.[ImageItemCode]
           )
,p1 AS (
           SELECT CAST(SUM(AvailableQuantity) AS int) AS [Count]
                 ,ImageItemCode
           FROM   YinTaiInventory.dbo.InventoryMaster A WITH(NOLOCK)
                  INNER JOIN YinTaiContent.dbo.ItemProfileCommonInfo B WITH(NOLOCK)
                       ON  A.ItemCode = B.ItemCode
                           AND B.PublishStatus = 1
                           AND B.[ImageItemCode] <> ''
                           AND B.[ItemCode] <> ''
           GROUP BY
                  B.[ImageItemCode]
       )
,items AS (
              SELECT ImageItemCode
                    ,[Count]
              FROM   p0 
              UNION ALL
              SELECT ImageItemCode
                    ,[Count]
              FROM   p1
          )

SELECT ImageItemCode
      ,SUM([Count]) AS [Count]
FROM   items
GROUP BY
       ImageItemCode;
    ]]>
    </commandText>
  </dataCommand>
  
</dataCommands>
